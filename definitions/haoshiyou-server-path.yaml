swagger: '2.0'
info:
  version: 1.1.0
  title: haoshiyou-server
basePath: /api
paths:
  '/HsyListings/{id}/interactions/{fk}':
    get:
      tags:
        - HsyListing
      summary: Find a related item by id for interactions.
      operationId: HsyListing.prototype.__findById__interactions
      parameters:
        - name: id
          in: path
          description: HsyListing id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Foreign key for interactions
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
    delete:
      tags:
        - HsyListing
      summary: Delete a related item by id for interactions.
      operationId: HsyListing.prototype.__destroyById__interactions
      parameters:
        - name: id
          in: path
          description: HsyListing id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Foreign key for interactions
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - HsyListing
      summary: Update a related item by id for interactions.
      operationId: HsyListing.prototype.__updateById__interactions
      parameters:
        - name: id
          in: path
          description: HsyListing id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Foreign key for interactions
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
  '/HsyListings/{id}/interactions':
    get:
      tags:
        - HsyListing
      summary: Queries interactions of HsyListing.
      operationId: HsyListing.prototype.__get__interactions
      parameters:
        - name: id
          in: path
          description: HsyListing id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/HsyInteraction'
      deprecated: false
    post:
      tags:
        - HsyListing
      summary: Creates a new instance in interactions of this model.
      operationId: HsyListing.prototype.__create__interactions
      parameters:
        - name: id
          in: path
          description: HsyListing id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
    delete:
      tags:
        - HsyListing
      summary: Deletes all interactions of this model.
      operationId: HsyListing.prototype.__delete__interactions
      parameters:
        - name: id
          in: path
          description: HsyListing id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/HsyListings/{id}/interactions/count':
    get:
      tags:
        - HsyListing
      summary: Counts interactions of HsyListing.
      operationId: HsyListing.prototype.__count__interactions
      parameters:
        - name: id
          in: path
          description: HsyListing id
          required: true
          type: string
          format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /HsyListings:
    post:
      tags:
        - HsyListing
      summary: Create a new instance of the model and persist it into the data source.
      operationId: HsyListing.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyListing'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
    put:
      tags:
        - HsyListing
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: HsyListing.upsert__put_HsyListings
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyListing'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
    patch:
      tags:
        - HsyListing
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: HsyListing.upsert__patch_HsyListings
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyListing'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
    get:
      tags:
        - HsyListing
      summary: Find all instances of the model matched by filter from the data source.
      operationId: HsyListing.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/HsyListing'
      deprecated: false
  /HsyListings/replaceOrCreate:
    post:
      tags:
        - HsyListing
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: HsyListing.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyListing'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
  /HsyListings/upsertWithWhere:
    post:
      tags:
        - HsyListing
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: HsyListing.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyListing'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
  '/HsyListings/{id}/exists':
    get:
      tags:
        - HsyListing
      summary: Check whether a model instance exists in the data source.
      operationId: 'HsyListing.exists__get_HsyListings_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/HsyListings/{id}':
    head:
      tags:
        - HsyListing
      summary: Check whether a model instance exists in the data source.
      operationId: 'HsyListing.exists__head_HsyListings_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - HsyListing
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: HsyListing.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
    delete:
      tags:
        - HsyListing
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: HsyListing.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - HsyListing
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'HsyListing.prototype.updateAttributes__put_HsyListings_{id}'
      parameters:
        - name: id
          in: path
          description: HsyListing id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyListing'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
    patch:
      tags:
        - HsyListing
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'HsyListing.prototype.updateAttributes__patch_HsyListings_{id}'
      parameters:
        - name: id
          in: path
          description: HsyListing id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyListing'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
  '/HsyListings/{id}/replace':
    post:
      tags:
        - HsyListing
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: HsyListing.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyListing'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
  /HsyListings/findOne:
    get:
      tags:
        - HsyListing
      summary: Find first instance of the model matched by filter from the data source.
      operationId: HsyListing.findOne
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyListing'
      deprecated: false
  /HsyListings/update:
    post:
      tags:
        - HsyListing
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: HsyListing.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyListing'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /HsyListings/count:
    get:
      tags:
        - HsyListing
      summary: Count instances of the model matched by where from the data source.
      operationId: HsyListing.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /HsyListings/change-stream:
    post:
      tags:
        - HsyListing
      summary: Create a change stream.
      operationId: HsyListing.createChangeStream__post_HsyListings_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - HsyListing
      summary: Create a change stream.
      operationId: HsyListing.createChangeStream__get_HsyListings_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  /HsyUsers:
    post:
      tags:
        - HsyUser
      summary: Create a new instance of the model and persist it into the data source.
      operationId: HsyUser.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyUser'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
    put:
      tags:
        - HsyUser
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: HsyUser.upsert__put_HsyUsers
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyUser'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
    patch:
      tags:
        - HsyUser
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: HsyUser.upsert__patch_HsyUsers
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyUser'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
    get:
      tags:
        - HsyUser
      summary: Find all instances of the model matched by filter from the data source.
      operationId: HsyUser.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/HsyUser'
      deprecated: false
  /HsyUsers/replaceOrCreate:
    post:
      tags:
        - HsyUser
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: HsyUser.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyUser'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
  /HsyUsers/upsertWithWhere:
    post:
      tags:
        - HsyUser
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: HsyUser.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyUser'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
  '/HsyUsers/{id}/exists':
    get:
      tags:
        - HsyUser
      summary: Check whether a model instance exists in the data source.
      operationId: 'HsyUser.exists__get_HsyUsers_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/HsyUsers/{id}':
    head:
      tags:
        - HsyUser
      summary: Check whether a model instance exists in the data source.
      operationId: 'HsyUser.exists__head_HsyUsers_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - HsyUser
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: HsyUser.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
    delete:
      tags:
        - HsyUser
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: HsyUser.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - HsyUser
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'HsyUser.prototype.updateAttributes__put_HsyUsers_{id}'
      parameters:
        - name: id
          in: path
          description: HsyUser id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyUser'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
    patch:
      tags:
        - HsyUser
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'HsyUser.prototype.updateAttributes__patch_HsyUsers_{id}'
      parameters:
        - name: id
          in: path
          description: HsyUser id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyUser'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
  '/HsyUsers/{id}/replace':
    post:
      tags:
        - HsyUser
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: HsyUser.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyUser'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
  /HsyUsers/findOne:
    get:
      tags:
        - HsyUser
      summary: Find first instance of the model matched by filter from the data source.
      operationId: HsyUser.findOne
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyUser'
      deprecated: false
  /HsyUsers/update:
    post:
      tags:
        - HsyUser
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: HsyUser.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyUser'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /HsyUsers/count:
    get:
      tags:
        - HsyUser
      summary: Count instances of the model matched by where from the data source.
      operationId: HsyUser.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /HsyUsers/change-stream:
    post:
      tags:
        - HsyUser
      summary: Create a change stream.
      operationId: HsyUser.createChangeStream__post_HsyUsers_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - HsyUser
      summary: Create a change stream.
      operationId: HsyUser.createChangeStream__get_HsyUsers_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  /HsyInteractions:
    post:
      tags:
        - HsyInteraction
      summary: Create a new instance of the model and persist it into the data source.
      operationId: HsyInteraction.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
    put:
      tags:
        - HsyInteraction
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: HsyInteraction.upsert__put_HsyInteractions
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
    patch:
      tags:
        - HsyInteraction
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: HsyInteraction.upsert__patch_HsyInteractions
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
    get:
      tags:
        - HsyInteraction
      summary: Find all instances of the model matched by filter from the data source.
      operationId: HsyInteraction.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/HsyInteraction'
      deprecated: false
  /HsyInteractions/replaceOrCreate:
    post:
      tags:
        - HsyInteraction
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: HsyInteraction.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
  /HsyInteractions/upsertWithWhere:
    post:
      tags:
        - HsyInteraction
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: HsyInteraction.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
  '/HsyInteractions/{id}/exists':
    get:
      tags:
        - HsyInteraction
      summary: Check whether a model instance exists in the data source.
      operationId: 'HsyInteraction.exists__get_HsyInteractions_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/HsyInteractions/{id}':
    head:
      tags:
        - HsyInteraction
      summary: Check whether a model instance exists in the data source.
      operationId: 'HsyInteraction.exists__head_HsyInteractions_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - HsyInteraction
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: HsyInteraction.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
    delete:
      tags:
        - HsyInteraction
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: HsyInteraction.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - HsyInteraction
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'HsyInteraction.prototype.updateAttributes__put_HsyInteractions_{id}'
      parameters:
        - name: id
          in: path
          description: HsyInteraction id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
    patch:
      tags:
        - HsyInteraction
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'HsyInteraction.prototype.updateAttributes__patch_HsyInteractions_{id}'
      parameters:
        - name: id
          in: path
          description: HsyInteraction id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
  '/HsyInteractions/{id}/replace':
    post:
      tags:
        - HsyInteraction
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: HsyInteraction.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
  /HsyInteractions/findOne:
    get:
      tags:
        - HsyInteraction
      summary: Find first instance of the model matched by filter from the data source.
      operationId: HsyInteraction.findOne
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/HsyInteraction'
      deprecated: false
  /HsyInteractions/update:
    post:
      tags:
        - HsyInteraction
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: HsyInteraction.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/HsyInteraction'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /HsyInteractions/count:
    get:
      tags:
        - HsyInteraction
      summary: Count instances of the model matched by where from the data source.
      operationId: HsyInteraction.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /HsyInteractions/change-stream:
    post:
      tags:
        - HsyInteraction
      summary: Create a change stream.
      operationId: HsyInteraction.createChangeStream__post_HsyInteractions_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - HsyInteraction
      summary: Create a change stream.
      operationId: HsyInteraction.createChangeStream__get_HsyInteractions_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
tags:
  - name: HsyListing
  - name: HsyUser
  - name: HsyInteraction
consumes:
  - application/json
  - application/x-www-form-urlencoded
  - application/xml
  - text/xml
produces:
  - application/json
  - application/xml
  - text/xml
  - application/javascript
  - text/javascript
definitions:
  x-any:
    properties: {}
  HsyInteraction:
    properties:
      uid:
        description: interaction id
        type: string
      listingId:
        description: id to join with HsyListing
        type: string
      type:
        description: >-
          string enum indicating type of interaction, usch as
          'BUMP','MARK_INACTIVE'
        type: string
      userId:
        description: >-
          id to join with HsyUser indicating whicd user is conducting this
          interaction
        type: string
      interaction_time:
        type: string
        format: date-time
    required:
      - uid
      - interaction_time
    additionalProperties: false
  HsyListing:
    properties:
      addressCityAndState:
        description: string for City and State
        type: string
      addressLine:
        description: >-
          string for First line of Address, usually street number and street
          name
        type: string
      amenities:
        description: amenities in Key-Value pair for extension
        type: object
      content:
        description: string of longer version description for entire listing
        type: string
      hsyGroupEnum:
        description: 'string enum such as [''SanFrancisco'',''SouthBayWest'']'
        type: string
      hsyGroupNick:
        description: string nickname inside of a Hsy Group
        type: string
      imageIds:
        type: array
        items:
          type: string
      isRentingEntireHouse:
        type: boolean
      lastUpdated:
        type: string
        format: date-time
      listingTypeEnum:
        description: listing type enum indicating ROOM_NEEDED or ROOMATE_NEEDED
        type: string
      location:
        description: 'Geo Location in (Lat, Lng) pair format'
        $ref: '#/definitions/GeoPoint'
      numBathRoom:
        type: number
        format: double
      numBedRoom:
        type: number
        format: double
      otherCosts:
        description: >-
          object of key(cost)-value(string) pair of other costs such as
          {networkIncluded:true}
        type: object
      ownerId:
        description: String Id to join with HsyUser.id
        type: string
      price:
        description: number for price of a rental per month
        type: number
        format: double
      rentalEndDate:
        description: The end date if it's a short rental
        type: string
        format: date-time
      rentalStartDate:
        description: date indicating when the house will be available
        type: string
        format: date-time
      requireToContact:
        description: >-
          string enum indicating requirement to contact ['REGISTER'.
          'LINKEDIN_CONNECTED']
        type: string
      singleRoomBathRoomType:
        description: 'string enum in [''SHARED'', ''PRIVATE_IN_ROOM'', ''PRIVATE_OUT_OF_ROOM'']'
        type: string
      state:
        description: 'string enum of [''ACTIVE'', ''INACTIVE'', ''DRAFT'']'
        type: string
      title:
        description: short string describing the title of a post
        type: string
      type:
        type: number
        format: double
      uid:
        description: unique id for HsyListing
        type: string
      wechatId:
        description: '[DEPRECATED]'
        type: string
    required:
      - ownerId
      - uid
    additionalProperties: false
  HsyUser:
    properties:
      avatarId:
        description: avatar image id in cloudinary
        type: string
      contactEmail:
        type: string
      contactPhone:
        type: string
      created:
        type: string
        format: date-time
      id:
        description: id of an user
        type: string
      lastUpdated:
        type: string
        format: date-time
      name:
        description: name of an user
        type: string
      pushNotificationRegIds:
        description: push notification registration ids
        type: array
        items:
          type: string
      weixin:
        description: string of WeChat(aka WeiXin) Id
        type: string
    required:
      - id
    additionalProperties: false
  GeoPoint:
    properties:
      lat:
        type: number
      lng:
        type: number
